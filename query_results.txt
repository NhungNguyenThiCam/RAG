Nội dung: used by the Scanner ; useRadix( ) , which sets the radix; reset( ) , which resets the scanner; and close( ) , which closes the scanner. JDK 9 added the methods tokens( ) , which returns all tokens in the form of a Stream<String> , and findAll( ) , which returns tokens that match the specified pattern in the form of a Stream<MatchResult> . The ResourceBundle, ListResourceBundle, and PropertyResourceBundle Classes The java.util and PropertyResourceBundle Classes The java.util package includes three classes that aid in the internationalization of your program. The first is the abstract class ResourceBundle . It defines methods that enable you to manage a collection of locale-sensitive resources, such as the strings that are used to label the user interface elements in your program. You can define two or more sets of translated strings that support various languages, such as English, German, or Chinese, with each translation set residing in its own bundle. You can then load the bundle appropriate to the current locale and use the strings to construct the program’s user interface. Resource bundles are identified by their family name (also called their base name ). To the family name can be added a two-character lowercase language code which specifies the language. In this case, if a requested locale matches the language code, then that version of the resource bundle is used. For example, a resource bundle with a family name of SampleRB could have a German version called SampleRB_de and a Russian version called SampleRB_ru . (Notice that an underscore links the family name to the language code.) Therefore, if the locale is Locale.GERMAN , SampleRB_de will be used. It is also possible to indicate specific variants of a language that relate to a specific country by specifying a country code specific country by specifying a country code after the language code. A country code is a two-character uppercase identifier, such as AU for Australia or IN for India. A country code is also preceded by an underscore when linked to the resource bundle name. Other variations are also supported. A resource bundle that has only the family name is the default bundle. It is used when no language-specific bundles are applicable. NOTE language-specific bundles are applicable. NOTE The language codes are defined by ISO standard 639 and the country codes by ISO standard 3166. The methods defined by ResourceBundle are summarized in Table 20-17 . Comparator method, 583 rewind( ), 729 , 741 , 744 , 745 RGB (red-green-blue) color model, 829 default, 899 RGBImageFilter class, 904 , 906 –907 example program demonstrating the, 907 –918 RGBtoHSB( ), 830 Richards, Martin, 4 Ritchie, Dennis, 4 , 5 rmi protocol, 1009 RMI (Remote Method Invocation), 15 , 720 , 995 , 1008 –1011, 1122 rmic compiler, 1010 rmiregistry (RMI registry), 1010 , 1011 Run-time system, Java,10. See also Java Virtual Machine (JVM) type information, Java Virtual Machine (JVM) type information, 15 , 333 , 376 –378, 514 run( ), 250 , 253 , 254 , 390 , 520 , 522 , 639 , 966 , 1034 overriding, 255 , 256 , 639 using a flag variable with, 272 –274 RUNNABLE, 274 Runnable interface, 250 , 252 , 390 , 520 , 638 , 639 , 919 , 965 , 966 , 1034 implementing the, 253 –254, 256 Runtime class, 495 , 496 –501, 962 executing other programs and, 501 –501 memory management and, 497 –498, 500 methods, table of some, 499 497 –498, 500 methods, table of some, 499 RUNTIME retention policy, 295 –296, 297 , 300 Runtime.exec( ), 495 , 499 , 501 Runtime.Version class, 502 –503 Runtime.version( ), 499 , 502 RuntimeException class, 228 , 229 , 237 , 240 , 244 RuntimePermission class, 529 S @SafeVarargs built-in annotation, 305 , 307 SAM (Single Abstract Method) type, 390 Sandbox, 10 save( ), 613 Scanner, 619 Scanner class, 657 –667 closing an instance of the, 663 constructors, 657 , 658 delimiters, 657 , 665 –666 demonstration programs, 661 –665 hasNextX( ) methods, table of, 659 how to use, 657 –658, 660 –661 methods, miscellaneous, 666 –667 nextX( ) methods, table of, 660 schedule( ), 639 , 640 ScheduledExecutorService interface, 941 ScheduledThreadPoolExecutor class, 921 , 941 Scientific notation, the end of the file.
